<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HouseHunter</title>
    <link rel="stylesheet" href="/stylesheets/roomdetail.css">

    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=<%= naverMapAPIClientID %>"></script>
    <script>
        window.onload = function() {
            initMap(); // 맵 초기화
            loadHeader(); // 헤더 로드
            loadRoomDetailData().then(() => { // loadRoomDetailData()가 완료된 후에 updateUI() 함수 호출
                updateUI(); // updateUI 함수를 loadRoomDetailData()가 완료된 후에 호출
            });
            // 좋아요 상태 확인 및 업데이트
            checkLikeStatus();
            loadFooter();
        };

        async function checkLikeStatus() {
            try {
                // URL에서 방의 ID를 가져옴
                const urlParams = new URLSearchParams(window.location.search);
                const roomId = urlParams.get('id');

                // 서버로부터 좋아요 상태 확인
                const response = await fetch('/check-like', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ roomId })
                });

                const data = await response.json();

                // 좋아요 상태에 따라 이미지 업데이트
                updateLikeImage(data.isLiked);
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function updateLikeImage(isLiked) {
            const likeIcon = document.getElementById('like-icon');
            if (isLiked) {
                likeIcon.src = 'image/heart_filled.png'; // 좋아요 상태일 때의 이미지
            } else {
                likeIcon.src = 'image/heart_empty.png'; // 좋아요 상태가 아닐 때의 이미지
            }
        }

        function loadHeader() {
            fetch('/header') 
                .then(response => response.text())
                .then(data => {
                    document.getElementById('header-container').innerHTML = data;
                    document.querySelector('.login-button').addEventListener('click', function() {
                        checkLogin(); 
                    });
                    updateUI();
                })
                .catch(error => console.error('Error:', error));
        }

        function loadFooter() {
            fetch('/footer') 
                .then(response => response.text())
                .then(data => {
                    document.getElementById('footer-container').innerHTML = data;
                })
                .catch(error => console.error('Error:', error));
        }

        async function checkLogin() {
            try {
                const response = await fetch('/check-login');
                const data = await response.json();

                if (data.isLoggedIn) {
                    window.location.href = '/mypage';
                } else {
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function updateUI() {
            try {
                const response = await fetch('/check-login');
                if (response.ok) { // 응답이 성공적인 경우에만 처리
                    const userData = await response.json();
                    const userNameDisplay = document.querySelector('.user-name');

                    if (userData.isLoggedIn) {
                        const loginButton = document.querySelector('.login-button');
                        loginButton.style.display = 'none'; 
                        userNameDisplay.textContent = userData.userName; 
                        userNameDisplay.style.display = 'inline-block';
                    } else {
                        userNameDisplay.style.display = 'none'; 
                    }
                } else {
                    console.error('Failed to fetch user data');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function saveLocateToLocalStorage(loc) {
            localStorage.setItem('recentLocate', loc);
        }

        async function loadRoomDetailData() {
            try {
                // URL에서 방의 ID를 가져옴
                const urlParams = new URLSearchParams(window.location.search);
                const roomId = urlParams.get('id');

                // 서버로부터 해당 방의 데이터를 가져옴
                const response = await fetch(`/get-room-data?id=${roomId}`);
                const roomData = await response.json();

                // 데이터를 사용하여 페이지 업데이트
                document.getElementById('photo1').src = roomData.photo1;
                document.getElementById('photo2').src = roomData.photo2;
                document.getElementById('rtype').textContent = roomData.rtype;
                document.getElementById('rtype2').textContent = roomData.rtype;
                document.getElementById('fix_money').textContent = roomData.fix_money;
                document.getElementById('fix_money2').textContent = roomData.fix_money;
                document.getElementById('monthly_money').textContent = roomData.monthly_money;
                document.getElementById('monthly_money2').textContent = roomData.monthly_money;
                document.getElementById('size').textContent = roomData.size;
                document.getElementById('elevator').textContent = roomData.elevator;
                document.getElementById('elevator2').textContent = roomData.elevator;
                document.getElementById('management_money').textContent = roomData.management_money;
                document.getElementById('management_money2').textContent = roomData.management_money;
                document.getElementById('phone').textContent = roomData.phone;
                document.getElementById('parking').textContent = roomData.parking;
                document.getElementById('floor').textContent = roomData.floor;
                document.getElementById('room_bath').textContent = roomData.room_bath;
                document.getElementById('elevator').textContent = roomData.elevator;
                document.getElementById('total_room').textContent = roomData.total_room;
                document.getElementById('total_parking').textContent = roomData.total_parking;
                document.getElementById('date').textContent = roomData.date;
                document.getElementById('locate').textContent = roomData.locate;

                // 집의 위치를 가져와서 지도에 마커로 표시
                const map = new naver.maps.Map('map', {
                    center: new naver.maps.LatLng(roomData.latitude, roomData.longitude), // 위도와 경도를 이용하여 지도 중심 설정
                    zoom: 15
                });

                const marker = new naver.maps.Marker({
                    position: new naver.maps.LatLng(roomData.latitude, roomData.longitude), // 위도와 경도를 이용하여 마커 위치 설정
                    map: map
                });

                // locate 값을 가져와서 로컬 스토리지에 저장
                const locate = document.getElementById('locate').textContent;
                saveLocateToLocalStorage(locate);

                // 좋아요 버튼 클릭 이벤트 리스너 추가
                var likeButton = document.getElementById('like-icon');

            } catch (error) {
                console.error('Error:', error);
            }
        }
        function updateLikeImage(isLiked) {
            const likeIcon = document.getElementById('like-icon');
            if (isLiked) {
                likeIcon.src = 'image/heart_filled.png'; // 좋아요 상태일 때의 이미지
            } else {
                likeIcon.src = 'image/heart_empty.png'; // 좋아요 상태가 아닐 때의 이미지
            }
        }

        async function toggleLike() {
            const roomId = window.location.search.split('=')[1];

            try {
                const response = await fetch('/check-login');
                const data = await response.json();

                if (data.isLoggedIn) {
                    const userId = data.userId;

                    const toggleResponse = await fetch('/toggle-like', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ userId, roomId })
                    });

                    const toggleData = await toggleResponse.json();

                    if (toggleData.success) {
                        updateLikeImage(toggleData.isLiked);
                    } else {
                        console.error('좋아요 토글 실패:', toggleData.message);
                    }
                } else {
                    // 로그인되지 않은 경우 로그인 페이지로 리디렉션
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('좋아요 토글 오류:', error);
            }
        }
        

        function initMap() {
            var mapOptions = {
                center: new naver.maps.LatLng(37.5665, 126.9780),
                zoom: 15
            };

            var map = new naver.maps.Map('map', mapOptions);
        }
    </script>
</head>
<body>
    <div id="header-container"></div>

    <main>
        <div class="content">
            <div class="image-gallery">
                <img id="photo1" alt="Image 1">
                <img id="photo2" alt="Image 2">
            </div>
        </div>

        <div class="room">
            <div class="room-wrapper">
                <div class="room-container">
                    <div class="room-title">
                        <p><span>월세</span>  <span id="fix_money"></span> / <span id="monthly_money"></span></p>
                    </div>
                    <div class="room-info">
                        <img src="image/type.png" alt="Room Type">
                        
                        <p id="rtype">  type</p>
                    </div>
                    <div class="room-info">
                        <img src="image/size.png" alt="Room Size">
                        <p id="size">  Size</p>
                    </div>
                    <div class="room-info">
                        <img src="image/elevator.png" alt="Elevator">
                        <p id="elevator">yes</p>
                    </div>
                    <div class="room-info">
                        <img src="image/money.png" alt="money">
                        <p><span id="management_money"></span> 만원</p>
                    </div>
                    <div class="room-info">
                        <img id="like-icon" src="image/heart_empty.png" alt="좋아요" onclick="toggleLike()">
                        <div class="phone" id="phone">전화번호</div>
                    </div>
                </div>

                <div class="map-info">
                    <p>서울특별시 <span id="locate"></span></p>
                    <div id="map" class="map"></div> 
                </div>
            </div>

            <div class="detail-content">
                <div class="room-info2">
                    <h2>가격정보</h2>
                </div>

                <div class="room-info2">
                    <p>월세</p>
                    <p2><span id="monthly_money2"></span> 만원</p>
                </div>
    
                <div class="room-info2">
                    <p>보증금</p>
                    <p2><span id="fix_money2"></span> 만원</p>
                </div>
                
                <div class="room-info2">
                    <p>관리비</p>
                    <p2><span id="management_money2"></span> 만원</p>
                </div>

                <div class="horizontal-line"></div>  

                <div class="room-info2">
                    <h2>상세정보</h2>
                </div>

                <div class="room-info2">
                    <p>방종류</p>
                    <p2 id="rtype2"></p2>
                </div>
    
                <div class="room-info2">
                    <p>방/욕실</p>
                    <p2 id="room_bath"></p2>
                </div>

                <div class="room-info2">
                    <p>해당층/건물층</p>
                    <p2 id="floor"></p2>
                </div>
                
                <div class="room-info2">
                    <p>엘레베이터</p>
                    <p2 id="elevator2"></p2>
                </div>
        
                <div class="room-info2">
                    <p>총 세대 수</p>
                    <p2 id="total_room"></p2>
                </div>

                <div class="room-info2">
                    <p>주차가능여부</p>
                    <p2 id="parking"></p2>
                </div>

                <div class="room-info2">
                    <p>총 주차대수</p>
                    <p2 id="total_parking"></p2>
                </div>

                <div class="room-info2">
                    <p>입주가능일</p>
                    <p2 id="date">즉시입주</p2>
                </div>
            </div>
        </div>
    </main>

    <div id="footer-container"></div>
</body>
</html>
