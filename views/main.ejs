<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HouseHunter</title>
    <link rel="stylesheet" href="/stylesheets/main.css">
    <script>
        function loadHeader() {
            fetch('/header') 
                .then(response => response.text())
                .then(data => {
                    document.getElementById('header-container').innerHTML = data;
                    document.querySelector('.login-button').addEventListener('click', function() {
                        checkLogin(); 
                    });
                    updateUI();
                })
                .catch(error => console.error('Error:', error));
        }

        function loadFooter() {
            fetch('/footer') 
                .then(response => response.text())
                .then(data => {
                    document.getElementById('footer-container').innerHTML = data;
                })
                .catch(error => console.error('Error:', error));
        }

        function saveLocateToLocalStorage(loc) {
            localStorage.setItem('recentLocate', loc);
        }

        async function checkLogin() {
            try {
                const response = await fetch('/check-login');
                const data = await response.json();

                if (data.isLoggedIn) {
                    window.location.href = '/mypage';
                } else {
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function updateUI() {
            try {
                const response = await fetch('/check-login');
                const userData = await response.json();
                const userNameDisplay = document.querySelector('.user-name');

                if (userData.isLoggedIn) {
                    const loginButton = document.querySelector('.login-button');
                    loginButton.style.display = 'none'; 
                    userNameDisplay.textContent = userData.userName; 
                    userNameDisplay.style.display = 'inline-block';
                } else {
                    userNameDisplay.style.display = 'none'; 
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function displayRecentLocate() {
            const recentLocate = localStorage.getItem('recentLocate');
            
            if (recentLocate) {
                const aiTitle = document.getElementById('ai'); 
                aiTitle.textContent = recentLocate; 
            }
        }

        function displayRoomInfo(data) {
            const formRoom = document.querySelector('.form-room');
            formRoom.innerHTML = ''; // 이전 페이지의 내용을 초기화

            data.forEach(room => {
                const formField = document.createElement('div');
                formField.classList.add('form-field');
                
                const photo1 = document.createElement('img');
                photo1.classList.add('field-label');
                photo1.src = room.photo1;
                formField.appendChild(photo1);

                const roomInfoText = document.createElement('div');
                roomInfoText.classList.add('roominfo-text');

                const roomMoney = document.createElement('div');
                roomMoney.id = 'room-money';
                roomMoney.innerHTML = `<p> 월세 <span>${room.fix_money}</span> / <span>${room.monthly_money}</span></p>`;
                roomInfoText.appendChild(roomMoney);

                const roomType = document.createElement('div');
                roomType.id = 'room-type';
                roomType.innerHTML = `<p><span>${room.rtype}</span>`;
                roomInfoText.appendChild(roomType);

                const roomInfo = document.createElement('div');
                roomInfo.id = 'room-info';
                roomInfo.innerHTML = `<p><span>${room.floor}</span>, 관리비 <span>${room.management_money}</span>만</p>`;
                roomInfoText.appendChild(roomInfo);

                // 클릭 이벤트 추가
                formField.addEventListener('click', () => {
                    // 각 원룸의 정보를 가진 페이지로 이동
                    window.location.href = `/roomdetail?id=${room.id}`;
                });

                formField.appendChild(roomInfoText);
                formRoom.appendChild(formField);
            });
        }

        function fetchRoomInfo(recentLocate) {
            fetch(`/ai-info?recentLocate=${recentLocate}`) 
                .then(response => response.json())
                .then(data => {
                    displayRoomInfo(data);
                })
                .catch(error => console.error('Error:', error));
        }

        function scrollLeft() {
            const formRoom = document.getElementById('formRoom');
            const lastChild = formRoom.lastElementChild; // 마지막 요소
            const scrollAmount = 10;

            formRoom.scrollLeft -= scrollAmount;

            if (formRoom.scrollLeft <= 0) {
                formRoom.insertBefore(lastChild.cloneNode(true), formRoom.firstElementChild);
                formRoom.removeChild(lastChild);
            }
        }

        function scrollRight() {
            const formRoom = document.getElementById('formRoom');
            const firstChild = formRoom.firstElementChild; // 첫 번째 요소
            const scrollAmount = 10;

            formRoom.scrollLeft += scrollAmount;

            if (formRoom.scrollLeft >= (formRoom.scrollWidth - formRoom.clientWidth)) {
                // 첫 번째 요소를 마지막으로 이동
                formRoom.appendChild(firstChild.cloneNode(true));
                formRoom.removeChild(firstChild);
            }
        }
        
        window.onload = function() {
            loadHeader();
            displayRecentLocate();
            const recentLocate = localStorage.getItem('recentLocate');
            fetchRoomInfo(recentLocate);
            document.addEventListener('click', displayRecentLocate);
            loadFooter();
        }
    </script>
</head>
<body>
    <div id="header-container"></div>

    <main>
        <div class="rtype-layout">
            <div class="rtype-container">
                <a href="room1"><button class="rtype-btn">원룸</button></a>
                <img class="image-overlay" src="image/room1.gif" alt="room1">
            </div>
            <div class="rtype-container">
                <a href="room2"><button class="rtype-btn">투룸, 쓰리룸</button></a>
                <img class="image-overlay" src="image/room2.gif" alt="room2">
            </div>
            <div class="rtype-container">
                <a href="officetel"><button class="rtype-btn">오피스텔</button></a>
                <img class="image-overlay" src="image/officetel.gif" alt="officetel">
            </div>
            <div class="rtype-container">
                <a href="apartment"><button class="rtype-btn">아파트</button></a>
                <img class="image-overlay" src="image/apartment.gif" alt="apartment">
            </div>
        </div>
        <div class="ai-layout">
            <div class="ai-title">
                <h2>💡 AI가 추천해주는</h2>
                <h2 id="ai">00구</h2>
                <h2>집</h2>
            </div>

            <div class="ai-container">
                <button class="scroll-button left" onclick="scrollLeft()">&lt;</button>
                <ul class="form-room" id="formRoom"></ul>
                <button class="scroll-button right" onclick="scrollRight()">&gt;</button>
            </div>
        </div>
        <div class="event-layout">
            <h2>💌 이벤트</h2>
            <div class="event-img">
                <a href="#"><img class="event" src="image/event1.png"/></a>
                <a href="#"><img class="event" src="image/event2.png"/></a>
            </div>
        </div>
    </main>

    <div id="footer-container"></div>

</body>
</html>
